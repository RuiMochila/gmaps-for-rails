

<script type="text/javascript" charset="utf-8" >
    ///
    var geocoder;
    var marker;
    ///


    $(function(){
        $('#refresh_button').click(function(){
            $.getJSON("/points.json", function(data){
                console.log("Esteve aqui");
                console.log(data);
                Gmaps.map.replaceMarkers(data);
            });
        });

    
        $('#get_zoom').click(function(e){
            alert(Gmaps.map.map.getZoom());
            var mapOptions = {
                // zoom: 4,
                // center: new google.maps.LatLng(-33, 151),
                
                panControl: false,
                // panControlOptions: {
                //     position: google.maps.ControlPosition.TOP_RIGHT
                // },

                mapTypeControl: false,
                // mapTypeControlOptions: {
                // style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
                // },

                zoomControl: false,
                // zoomControlOptions: {
                //     style: google.maps.ZoomControlStyle.SMALL
                // },

                scaleControl: false,
                // scaleControlOptions: {
                //     position: google.maps.ControlPosition.TOP_LEFT
                // },

                streetViewControl: false,
                // streetViewControlOptions: {
                // position: google.maps.ControlPosition.LEFT_TOP
                // }

                mapTypeId: google.maps.MapTypeId.ROADMAP
            }
            Gmaps.map.map.setOptions(mapOptions);
            // var bounds = new google.maps.LatLngBounds();
            // var norte = new google.maps.LatLng(38.7779317, -9.2092897);
            // var sul = new google.maps.LatLng(37.0179538, -7.930834000000001);
            // bounds.extend(norte);
            // Gmaps.map.map.fitBounds(bounds);
        }); 


        $('#show_button').click(function(e) {
            console.log(Gmaps.map.markers);
            // Devolve um array de markers, em cada marker posso aceder ao serviceObject, ele tem o __gm_id
            // Gmaps.map.hideMarker(marker);
        });



    });

</script>


<h1>Listing points</h1>

<table>
  <tr>
    <th>Name</th>
    <th>Description</th>
    <th>Address</th>
    <th>Longitude</th>
    <th>Latitude</th>
    <th>Gmaps</th>
    <th></th>
    <th></th>
    <th></th>
  </tr>

<% @points.each do |point| %>
  <tr>
    <td><%= point.name %></td>
    <td><%= point.description %></td>
    <td><%= point.address %></td>
    <td><%= point.longitude %></td>
    <td><%= point.latitude %></td>
    <td><%= point.gmaps %></td>
    <td><%= link_to 'Show', point %></td>
    <td><%= link_to 'Edit', edit_point_path(point) %></td>
    <td><%= link_to 'Destroy', point, method: :delete, data: { confirm: 'Are you sure?' } %></td>
  </tr>
<% end %>
</table>

<br />

<%= link_to 'New Point', new_point_path %>

<button id="refresh_button">Refresh</button>
<button id="get_zoom">Get Map Zoom</button>
<button id="show_button">Show Markers</button>

<label>Address: </label>
<input id="address"  type="text"/>
<label>latitude: </label>
<input id="latitude" type="text"/><br/>
<label>longitude: </label>
<input id="longitude" type="text"/>
<!-- Helper para mostrar o mapa, passar opções aqui -->
<%= gmaps(:markers => {
                :data => @json, 
                :options => { 
                # :raw => '{ animation: google.maps.Animation.BOUNCE }' ,
                # :rich_marker => true 
                :do_clustering => true,
                clusterer_maxZoom: 8, #define at which zoom level clusterer is disabled, default to 10
                #:draggable #allow drag markers, default to false
                #:clusterer_gridSize #the more the quicker but the less precise, default to 50
                #:marker_picture
                #:marker_width
                #:marker_length
                
                randomize: true, #Google maps can't display two markers which have the same coordinates. This randomizer enables to prevent this situation from happening.
                
                max_random_distance: 5 #in meters. Each marker coordinate could be altered by this distance in a random direction
                
                #:list_container: null #if a string is passed, it will be assumed that it's the id of the <ul> in which you want the list of markers to be included. Define gmaps4rails_sidebar method in your model to customize what you want to be displayed in each <li>
                
                #:custom_clusterer_pictures: #vê no site o código para o custom cluster


                } 
            },

          :map_options => { 
            # container_id:  "map_container",
            # id:   "map",
            type: "SATELLITE", # HYBRID, ROADMAP, SATELLITE, TERRAIN
            raw: '{ disableDefaultUI: false, scrollwheel: true } ', 
            center_on_user: true, 
            detect_location: true,
            auto_adjust: false,
            # :center_latitude => 38.6610112, 
            # :center_longitude => -9.0791227,
            # disableDoubleClickZoom: false,    
            # draggable: true,
            # mapTypeControl:  null, #display the map type dropdown, unless set to false it will be displayed
            auto_zoom: true,
            zoom: 15,
            # maxZoom: null, #max zoom level
            #min_zoom: 5 #min zoom level 
            #bounds: [{"lat": "38.7779317","lng": "-9.2092897"},{"lat": "37.0179538","lng": "-7.930834000000001"} ] #adjust map to these limits. Should be [{"lat": , "lng": }, {"lat": , "lng": } ...]
        }) %> 

<% content_for :scripts do %>

<script type="text/javascript" charset="utf-8" >
    // Isto é evocado quando o mapa é carregado, 
    // Introduzo opções adicionais que n consegui pela Gem.
    Gmaps.map.callback = function() {
        
        var mapOptions = {
            disableDefaultUI: true,
            // zoom: 4,
            // center: new google.maps.LatLng(-33, 151),
            
            panControl: false,
            // panControlOptions: {
            //     position: google.maps.ControlPosition.TOP_RIGHT
            // },

            mapTypeControl: true,
            // mapTypeControlOptions: {
            // style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
            // },

            zoomControl: false,
            // zoomControlOptions: {
            //     style: google.maps.ZoomControlStyle.SMALL
            //     position: google.maps.ControlPosition.LEFT_CENTER
            // },

            scaleControl: false,
            // scaleControlOptions: {
            //     position: google.maps.ControlPosition.TOP_LEFT
            // },

            streetViewControl: false,
            // streetViewControlOptions: {
            // position: google.maps.ControlPosition.LEFT_TOP
            // }

            mapTypeId: google.maps.MapTypeId.HYBRID, //SATTELLITE, ROADMAP, HYBRID
            // styles: [{
            //     elementType: "labels",
            //     stylers: [ { visibility: "on" } ]
            // }],
            styles: [{
                featureType: "road",
                stylers: [ {visibility: "off"} ],
                featureType: "label",
                stylers: [ {visibility: "off"} ]
            }],
            minZoom: 5
            // maxZoom: 15
        }


        ////
        geocoder = new google.maps.Geocoder();
        ////

        Gmaps.map.map.setOptions(mapOptions);
        Gmaps.map.map.setTilt(45);
        google.maps.event.addListener(Gmaps.map.map,'click',function(event) {
            console.log(event.latLng.lat() + ', ' + event.latLng.lng());
            ///////
            marker = new google.maps.Marker({
                map: Gmaps.map.map,
                draggable: true,
                position: new google.maps.LatLng(event.latLng.lat(),event.latLng.lng())
            });

            //Add listener to marker for reverse geocoding
            //'drag'
            google.maps.event.addListener(marker, 'click', function() {
                geocoder.geocode({'latLng': marker.getPosition()}, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        for (var i = results.length-1; i >= 0; i--) {
                            console.log(results[i]);
                        }
                        if (results[0]) {
                            $('#address').val(results[0].formatted_address);
                            $('#latitude').val(marker.getPosition().lat());
                            $('#longitude').val(marker.getPosition().lng());
                        }
                    }
                });
            });
            ///////
        });




    }

</script>
<% end %>